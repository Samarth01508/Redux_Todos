{"ast":null,"code":"var _jsxFileName = \"/Users/samartha/Desktop/Practice/Todos with Redux/react-app-with-redux/src/Todos.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, toggleTodo } from \"./actions\";\nimport store from \"./store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todos() {\n  _s();\n  const [taskText, setTaskText] = useState(\"\");\n  const dispatch = useDispatch();\n  const state = store.getState();\n  function handleAddTask() {\n    if (taskText.trim() === \"\") {\n      return;\n    }\n    dispatch(addTodo(taskText));\n    setTaskText(\"\");\n  }\n  function handleToggleTask(task) {\n    dispatch(toggleTodo(task.id));\n  }\n  const incomplete = useSelector(state => state.incomplete);\n  const complete = useSelector(state => state.complete);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Incomplete Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: incomplete.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.text, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleToggleTask(task),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskText,\n      onChange: e => setTaskText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Complete Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: complete.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.text, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleToggleTask(task),\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"TY4ky0fv46vC7+sBBZYN7zPr3/I=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","addTodo","toggleTodo","store","jsxDEV","_jsxDEV","Todos","_s","taskText","setTaskText","dispatch","state","getState","handleAddTask","trim","handleToggleTask","task","id","incomplete","complete","children","fileName","_jsxFileName","lineNumber","columnNumber","map","text","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/samartha/Desktop/Practice/Todos with Redux/react-app-with-redux/src/Todos.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, toggleTodo } from \"./actions\";\nimport store from \"./store\";\n\nfunction Todos() {\n  const [taskText, setTaskText] = useState(\"\");\n  const dispatch = useDispatch();\n  const state = store.getState();\n\n  function handleAddTask() {\n    if (taskText.trim() === \"\") {\n      return;\n    }\n    dispatch(addTodo(taskText));\n    setTaskText(\"\");\n  }\n\n  function handleToggleTask(task) {\n    dispatch(toggleTodo(task.id));\n  }\n\n  const incomplete = useSelector((state) => state.incomplete);\n  const complete = useSelector((state) => state.complete);\n\n  return (\n    <div>\n      <h2>Incomplete Tasks</h2>\n      <ul>\n        {incomplete.map((task) => (\n          <li key={task.id}>\n            {task.text}{\" \"}\n            <button onClick={() => handleToggleTask(task)}>Complete</button>\n          </li>\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        value={taskText}\n        onChange={(e) => setTaskText(e.target.value)}\n      />\n      <button onClick={handleAddTask}>Add Task</button>\n\n      <h2>Complete Tasks</h2>\n      <ul>\n        {complete.map((task) => (\n          <li key={task.id}>\n            {task.text}{\" \"}\n            <button onClick={() => handleToggleTask(task)}>Incomplete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Todos;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}