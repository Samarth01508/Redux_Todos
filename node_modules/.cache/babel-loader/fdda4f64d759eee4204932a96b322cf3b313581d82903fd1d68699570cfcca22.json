{"ast":null,"code":"var _jsxFileName = \"/Users/samartha/Desktop/Practice/Todos with Redux/react-app-with-redux/src/Todos.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, toggleTodo } from \"./actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todos() {\n  _s();\n  const [taskText, setTaskText] = useState(\"\");\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todos);\n  function handleAddTask() {\n    if (taskText.trim() === \"\") {\n      return;\n    }\n    dispatch(addTodo(taskText));\n    setTaskText(\"\");\n  }\n  function handleToggleTask(task) {\n    dispatch(toggleTodo(task.id));\n  }\n  const incomplete = todos.filter(task => !task.complete);\n  const complete = todos.filter(task => task.complete);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Incomplete Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: incomplete.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.text, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleToggleTask(task),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskText,\n      onChange: e => setTaskText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Complete Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: complete.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.text, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleToggleTask(task),\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"JiEUf2Ng99E/4LHK7ZrjIAQb2ts=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","addTodo","toggleTodo","jsxDEV","_jsxDEV","Todos","_s","taskText","setTaskText","dispatch","todos","state","handleAddTask","trim","handleToggleTask","task","id","incomplete","filter","complete","children","fileName","_jsxFileName","lineNumber","columnNumber","map","text","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/samartha/Desktop/Practice/Todos with Redux/react-app-with-redux/src/Todos.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, toggleTodo } from \"./actions\";\n\nfunction Todos() {\n  const [taskText, setTaskText] = useState(\"\");\n  const dispatch = useDispatch();\n  const todos = useSelector((state) => state.todos);\n\n  function handleAddTask() {\n    if (taskText.trim() === \"\") {\n      return;\n    }\n    dispatch(addTodo(taskText));\n    setTaskText(\"\");\n  }\n\n  function handleToggleTask(task) {\n    dispatch(toggleTodo(task.id));\n  }\n\n  const incomplete = todos.filter((task) => !task.complete);\n  const complete = todos.filter((task) => task.complete);\n\n  return (\n    <div>\n      <h2>Incomplete Tasks</h2>\n      <ul>\n        {incomplete.map((task) => (\n          <li key={task.id}>\n            {task.text}{\" \"}\n            <button onClick={() => handleToggleTask(task)}>Complete</button>\n          </li>\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        value={taskText}\n        onChange={(e) => setTaskText(e.target.value)}\n      />\n      <button onClick={handleAddTask}>Add Task</button>\n\n      <h2>Complete Tasks</h2>\n      <ul>\n        {complete.map((task) => (\n          <li key={task.id}>\n            {task.text}{\" \"}\n            <button onClick={() => handleToggleTask(task)}>Incomplete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Todos;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}